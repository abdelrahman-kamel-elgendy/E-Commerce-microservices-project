# API Gateway Configuration
server.port=${SERVER_PORT}

# Eureka Client Configuration
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE}

# Application Name
spring.application.name=${SPRING_APPLICATION_NAME}

# Gateway Routes Configuration
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Global CORS Configuration
# Use allowed-origin-patterns so a wildcard can be used while allow-credentials=true
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origin-patterns=${GATEWAY_CORS_ALLOWED_ORIGINS:*}
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=${GATEWAY_CORS_ALLOWED_METHODS}
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=${GATEWAY_CORS_ALLOWED_HEADERS}
spring.cloud.gateway.globalcors.cors-configurations.[/**].allow-credentials=${GATEWAY_CORS_ALLOW_CREDENTIALS}

# Allow Gateway to keep error response bodies
spring.cloud.gateway.httpclient.response-timeout=${GATEWAY_HTTPCLIENT_RESPONSE_TIMEOUT}
spring.cloud.gateway.httpclient.connect-timeout=${GATEWAY_HTTPCLIENT_CONNECT_TIMEOUT}
spring.cloud.gateway.httpclient.wiretap=true

# Comma-separated list of paths to exclude from auth (not parsed by code yet â€” placeholder)
gateway.auth.exclude.paths=${GATEWAY_AUTH_EXCLUDE_PATHS}
